plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.medialert"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId = "com.example.medialert"
        minSdk = 21 // Required for image_cropper
        targetSdk = flutter.targetSdkVersion
        versionCode = 1
        versionName = "1.0.0"
        multiDexEnabled = true
        
        // Optimize DEX process
        multiDexKeepFile file('multidex-config.txt')
        
        // Enable R8 optimization
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig = keystorePropertiesFile.exists() ? signingConfigs.release : signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Enable build config generation optimization
            buildConfigField "boolean", "ENABLE_OPTIMIZATION", "true"
            
            // Optimize release builds
            zipAlignEnabled true
            debuggable false
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            
            // Enable incremental dexing
            crunchPngs false
            
            // Disable unnecessary debug features
            pseudoLocalesEnabled false
            renderscriptDebuggable false
            jniDebuggable false
            
            // Enable build config generation optimization
            buildConfigField "boolean", "ENABLE_OPTIMIZATION", "true"
        }
    }

    buildFeatures {
        buildConfig true
    }

    // Remove buildCache configuration and other problematic optimizations
    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    // Enable resource optimization
    aaptOptions {
        cruncherEnabled = false
        // Disable PNG optimization in debug
        cruncherProcesses = 1
    }

    // Enable dexing optimization
    dexOptions {
        preDexLibraries = true
        // Reduce max processes for low memory
        maxProcessCount = 4
        // Reduce memory allocation
        javaMaxHeapSize = "1g"
        // Keep main dex small
        jumboMode = true
    }

    // Disable unused features
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/*.kotlin_module'
    }

    lint {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}

// Enable Gradle build cache
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        // Reduce memory usage during compilation
        options.compilerArgs << "-Xmx1g"
        options.compilerArgs << "-XX:MaxPermSize=256m"
        options.compilerArgs << "-XX:+UseParallelGC"
    }
}

flutter {
    source = "../.."
}
