plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.medialert"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        // Enable compilation in parallel
        encoding = "UTF-8"
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId = "com.example.medialert"
        minSdk = 21
        targetSdk = flutter.targetSdkVersion
        versionCode = 1
        versionName = "1.0.0"
        multiDexEnabled = true
        
        // Enable R8 optimization
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig = keystorePropertiesFile.exists() ? signingConfigs.release : signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            buildConfigField "boolean", "ENABLE_OPTIMIZATION", "true"
            zipAlignEnabled true
            debuggable false
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            shrinkResources false
            
            buildConfigField "boolean", "ENABLE_OPTIMIZATION", "false"
            crunchPngs false
        }
    }

    buildFeatures {
        buildConfig true
    }

    // Optimize compilation
    tasks.withType(JavaCompile) {
        options.incremental = true
        options.fork = true
        options.failOnError = false
    }

    // Optimize resource processing
    aaptOptions {
        cruncherEnabled = false
        cruncherProcesses = 1
        noCompress "tflite"
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    // Optimize dex processing
    dexOptions {
        preDexLibraries = true
        maxProcessCount = Runtime.runtime.availableProcessors()
        javaMaxHeapSize = "2g"
        jumboMode = true
        threads = Runtime.runtime.availableProcessors()
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/*.kotlin_module'
        exclude '**.properties'
        exclude '**.bin'
    }

    lint {
        checkReleaseBuilds false
        abortOnError false
        disable 'InvalidPackage'
        disable 'GradleDependency'
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}

flutter {
    source = "../.."
}
